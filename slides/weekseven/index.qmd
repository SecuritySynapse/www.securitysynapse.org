---
title: "Understanding Protocols"
subtitle: "Grasping the Basics of Networking Protocols"
description: "How do networking protocols work?"
date: "2024-10-14"
date-format: long
author: Gregory M. Kapfhammer
execute:
  echo: true
jupyter: python3
format:
  revealjs:
    completion: true
    theme: default
    css: ../css/styles.css
    history: false
    scrollable: true
    transition: slide
    highlight-style: github
    footer: "Security Synapse"
---

# What is a computer networking protocol?

::: {.incremental style="margin-top: -0.5em; font-size: 0.95em;"}

- Rules that govern how devices communicate
- Includes rules for the following tasks:
    - Syntax and structure of messages
    - Message semantics
    - Message synchronization
    - Error detection and correction

:::

# How does an understanding network protocols connect to computer security?

::: incremental

- Know a network protocol and its weakness to see exploits, the attack surface,
and control attack opportunities

:::

## Using `dig` for DNS Resolution

```text
; <<>> DiG 9.18.28 <<>> www.securitysynapse.org
;; global options: +cmd
;; Got answer:
;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 49950
;; flags: qr rd ra; QUERY: 1, ANSWER: 3, AUTHORITY: 0, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 1232
; COOKIE: 0b85acf369d8eae70100000067179b5124bf1ddbdb95f41e (good)
;; QUESTION SECTION:
;www.securitysynapse.org.       IN      A

;; ANSWER SECTION:
www.securitysynapse.org. 14400  IN      CNAME   securitysynapse.netlify.app.
securitysynapse.netlify.app. 20 IN      A       44.217.161.11
securitysynapse.netlify.app. 20 IN      A       54.161.234.33

;; Query time: 103 msec
;; SERVER: 192.168.5.20#53(192.168.5.20) (UDP)
;; WHEN: Tue Oct 22 08:32:17 EDT 2024
;; MSG SIZE  rcvd: 153
```

# Networking Overview

::: incremental

- Network Access Layer
- Internet Layer Protocols
- Transport Layer Protocols
- Application Layer Protocols

:::

::: {.fragment .fade .boxed-content style="margin-top: 0.25em; font-size: 0.875em;"}

**Key Questions**: Why are networking protocols divided into layers? Which
layers are closer to hardware? Closer to people using networks?

:::

## Address Resolution Protocol (ARP)

::: incremental

- Resolves IP addresses to MAC addresses
- Operates at the data link layer
- Uses ARP cache to store mappings
- ARP request and ARP reply messages

:::

::: {.fragment .fade .boxed-content style="margin-top: 0.25em; font-size: 0.875em;"}

{{< iconify fa6-solid lightbulb >}} **Key Questions**

- What is an example of an IP address?
- What is an example of a MAC address?
- How are these addresses similar to and different from each other?

:::

## Wireless Networking

::: incremental

- Uses radio waves to provide network connectivity
- Operates on IEEE 802.11 standards
- **Common frequencies**: 2.4 GHz and 5 GHz
- **Security protocols**: WEP, WPA, WPA2, WPA3

:::

::: {.fragment .fade .boxed-content style="margin-top: 0.25em; font-size: 0.875em;"}

{{< iconify fa6-solid lightbulb >}} **Key Questions**

- What are the trade-offs between different frequencies?
- Which security protocol is the most secure? Why?
- What are the benefits and downsides of wireless networking?

:::

## Ethernet

::: incremental

- Wired networking technology
- Uses MAC addresses for communication
- Common standards: 10BASE-T, 100BASE-TX, 1000BASE-T
- Full-duplex and half-duplex modes

:::

::: {.fragment .fade .boxed-content style="margin-top: 0.25em; font-size: 0.875em;"}

{{< iconify fa6-solid lightbulb >}} **Key Questions**

- What are the benefits and downsides of wired networking?
- How does this approach compare to wireless networking?
- How do the different duplex modes affect network performance?

:::

## Wireless Output from `ifconfig`

```text
wlp1s0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 10.0.130.101  netmask 255.255.192.0  broadcast 10.0.191.255
        inet6 fe80::2b19:5ed6:ef18:51ed  prefixlen 64  scopeid 0x20<link>
        ether a8:3b:76:ba:ac:e9  txqueuelen 1000  (Ethernet)
        RX packets 5598  bytes 343800 (335.7 KiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 39  bytes 3733 (3.6 KiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
```

::: {.fragment .fade style="margin-top: 1.0em; font-size: 0.85em;"}

{{< iconify fa6-solid lightbulb >}} **Key Questions**

- What is the name of this wireless interface?
- What is the IP address of this wireless interface?
- What is the MAC address of this wireless interface?
- How much data has this interface sent and received?

:::

## Ethernet Output from `ifconfig`

```text
enp103s0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 10.10.1.173  netmask 255.255.255.0  broadcast 10.10.1.255
        inet6 fe80::2469:6a20:94e2:494a  prefixlen 64  scopeid 0x20<link>
        ether 64:4b:f0:12:6f:d6  txqueuelen 1000  (Ethernet)
        RX packets 65541  bytes 42671869 (40.6 MiB)
        RX errors 0  dropped 33  overruns 0  frame 0
        TX packets 35552  bytes 14487279 (13.8 MiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
        device memory 0x60300000-6037ffff
```

::: {.fragment .fade style="margin-top: 1.0em; font-size: 0.85em;"}

{{< iconify fa6-solid lightbulb >}} **Key Questions**

- What is the name of this wired interface?
- What is the IP address of this wired interface?
- What is the MAC address of this wired interface?
- How much data has this interface sent and received?

:::

## Using ICMP with `ping`

```text
‚ùØ ping www.google.com
PING www.google.com (142.250.80.100) 56(84) bytes of data.
64 bytes from lga34s36-in-f4.1e100.net (142.250.80.100): icmp_seq=1 ttl=58 time=14.6 ms
64 bytes from lga34s36-in-f4.1e100.net (142.250.80.100): icmp_seq=2 ttl=58 time=14.8 ms
64 bytes from lga34s36-in-f4.1e100.net (142.250.80.100): icmp_seq=3 ttl=58 time=19.5 ms
64 bytes from lga34s36-in-f4.1e100.net (142.250.80.100): icmp_seq=4 ttl=58 time=17.6 ms
64 bytes from lga34s36-in-f4.1e100.net (142.250.80.100): icmp_seq=5 ttl=58 time=16.7 ms
64 bytes from lga34s36-in-f4.1e100.net (142.250.80.100): icmp_seq=6 ttl=58 time=14.6 ms
64 bytes from lga34s36-in-f4.1e100.net (142.250.80.100): icmp_seq=7 ttl=58 time=16.0 ms

--- www.google.com ping statistics ---
7 packets transmitted, 7 received, 0% packet loss, time 6011ms
rtt min/avg/max/mdev = 14.641/16.258/19.470/1.680 ms
```

::: {.fragment .fade style="margin-top: 0.25em; font-size: 0.85em;"}

- What is the meaning of `ttl` and `time`?
- What does `ping` report about packet transmission?
- Will all servers response to `ping` requests?

:::
